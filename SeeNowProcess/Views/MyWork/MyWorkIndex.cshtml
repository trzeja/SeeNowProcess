@model IEnumerable<SeeNowProcess.Models.Problem>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Index";
}

<head>
    <link rel="stylesheet" type="text/css" href="~/Content/leftmenu.css">
    <style>
        .fill {
    top: 70px;
    left: 195px;
    right: 0;
    bottom: 0;
    position: absolute;
    width: auto;
    height: auto;
    z-index: -1;
}
        table, th, td {
          
    border: 1px solid black;
}
        .wid {
            width: 200px;
        }
        .element {
            border-radius: 20px;
            background-color: #33cc33;
            /*width: 150px;*/
            width:10vw;
            padding: 5px;
            margin-left: auto;
            margin-right: auto;
            margin-top: 5px;
            text-align: center;
            font-size: 12px;
            min-height: 100px;
        }

        .element2 {
            border-radius: 30px;
            background-color: #79ff4d;
            margin-left: auto;
            margin-right: auto;
            text-align: center;
            padding: 5px;
            width: 8vw;
            /*width: 120px;*/
        }

        .space {
            height: 900px;
            /*height: 100%;*/
            padding-top: 15px;
            /*width: 200px;*/
            border: 1px solid #aaaaaa;
            background-color: #e6ffe6;
            min-height: 400px;
            max-height: 1000px;
            width: 12.3vw;
        }

        .visible {
            min-height: 250px;
            min-width: 50px;
        }

        .space2 {
            min-width: 12.3vw;
            height: 100%;
            border: 1px solid #aaaaaa;
            background-color: #e6ffe6;
        }

        .body {
            margin: 0 !important;
        }

        .simpleDemo ul[dnd-list],
        .simpleDemo ul[dnd-list] > li {
            position: relative;
        }

        .simpleDemo ul[dnd-list] {
            min-height: 42px;
            padding-left: 0px;
        }

            .simpleDemo ul[dnd-list] .dndDraggingSource {
                display: none;
            }

            .simpleDemo ul[dnd-list] .dndPlaceholder {
                display: block;
                background-color: #ddd;
                min-height: 42px;
            }

            .simpleDemo ul[dnd-list] li {
                background-color: #fff;
                border: 1px solid #ddd;
                border-top-right-radius: 4px;
                border-top-left-radius: 4px;
                display: block;
                padding: 10px 15px;
                margin-bottom: -1px;
            }

                .simpleDemo ul[dnd-list] li.selected {
                    background-color: #dff0d8;
                    color: #3c763d;
                }
    </style>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link rel="stylesheet" type="text/css" href="~/Content/leftmenu.css">
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <script src="~/Scripts/angular-drag-and-drop-lists.js"></script>
</head>
<body>

    <script>
        angular.module("dragAndDrop", ['dndLists']).controller("dragging", function ($scope, $http) {

            //$http({
            //    method: "GET",
            //    url: "/MyWork/GetCurrentUser",
            //    headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8' }
            //}).then(function success(result) {
            //    $scope.user = result.data;
            //}).catch(function fail(result) { });

            $scope.dropCallback = function (item,number) {
                //w item mamy jaki był poprzednio - w number jaki ma byc nowy
                $http({
                    method: "POST",
                    url: "/MyWork/UpdateDatabase",
                    data: $.param({
                        'ProblemID': item.ProblemID, 'NewState': number
                    }),
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8' }
                }).then(function success(response) {}, function failure(response) {});
                item.BoxID = number;
                return item;
            };
            

            $http({
                method: "GET",
                url: "/MyWork/GetBoxOrder",
                headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8' }
            })
            .then(function success(result) {
                $scope.boxOrder = result.data;

                //utworzenie listy na przechowywanie taskow
                $scope.lists = [];
                for (var i = 0; i < $scope.boxOrder.length; i++) 
                {
                    $scope.lists.push({Order: $scope.boxOrder[i].BoxOrder, Tasks:[]});
                }
                $http({
                    method: "GET",
                    url: "/MyWork/IndexJS",
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8' }
                })
                .then(function success(result) {
                //pobrac tu trzeba tez do ktorego nalezy 
                //$scope.models.lists.A = result.data;
                $scope.wholeList = result.data;

                for (var x = 0; x < $scope.wholeList.length; x++) {
                    //switch ($scope.allProblemsList[x].Box.Order) { //moja propozycja (Mikolaj)
                    //nie dziala, moze nie da sie odwolac do tak zagnizdzonego pola... :c konsola na 
                    //przegladarce wywala ze nie znapola "Order"

                    for (var j = 0; j < $scope.lists.length; j++) {
                        if ($scope.wholeList[x].BoxOrder == $scope.lists[j].Order) {
                            $scope.lists[j].Tasks.push($scope.wholeList[x]);
                        }
                    }
                    //switch ($scope.wholeList[x].BoxOrder) {
                    //    case 0:
                    //        $scope.models.lists.A.push($scope.wholeList[x]);
                    //        break;
                    //    case 1:
                    //        $scope.models.lists.B.push($scope.wholeList[x]);
                    //        break;
                    //    case 2:
                    //        $scope.models.lists.C.push($scope.wholeList[x]);
                    //        break;
                    //    case 3:
                    //        $scope.models.lists.D.push($scope.wholeList[x]);
                    //        break;
                    //    case 4:
                    //        $scope.models.lists.E.push($scope.wholeList[x]);
                    //        break;
                    //    case 5:
                    //    default:
                    //        $scope.models.lists.F.push($scope.wholeList[x]);
                    //        break;
                    //}
                }


                }).catch(function fail(result) {
                    $scope.list = ":(";
                })
            }).catch(function fail(result) {
                $scope.boxOrder = ":(";
            })


            

            $scope.wholeList = [];

            $scope.addTask = function (title,description) {
                $scope.models.lists.A.push({title, description});
            }
            

        });


    </script>




    <div ng-app="dragAndDrop" ng-controller="dragging">
       <p>{{hello}}</p>
        <table class="fill">
            <tr>
                <th class="space2 column" ng-repeat="x in boxOrder"><h5 class="text-center"><strong>{{x.Name}}</strong></h5></th>
            </tr>
            <tr>
                <td valign="top" class="space column" ng-repeat="y in lists">
                <ul class="visible list-unstyled text-center" dnd-list="y.Tasks" dnd-drop="dropCallback(item,y.Order)">
                    <li ng-repeat="item in y.Tasks"
                        dnd-draggable="item"
                        dnd-moved="y.Tasks.splice($index, 1)"
                        dnd-effect-allowed="move">
                        <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                    </li>
                </ul>
            </td>
            </tr>
        </table>
            @*<div class="row">
                <div class="space2 col-sm-2"><h5 class="text-center"><strong>Open</strong></h5></div>
                <div class="space2 col-sm-2"><h5 class="text-center"><strong>Planned</strong></h5></div>
                <div class="space2 col-sm-2"><h5 class="text-center"><strong>In Progress</strong></h5></div>
                <div class="space2 col-sm-2"><h5 class="text-center"><strong>In Testing</strong></h5></div>
                <div class="space2 col-sm-2"><h5 class="text-center"><strong>Done</strong></h5></div>
                <div class="space2 col-sm-2" ng-repeat="x in boxOrder"><h5 class="text-center"><strong>{{x.Name}}</strong></h5></div>
            </div>*@
            @*<div class="row">
                <div class="space col-sm-2">
                    <ul class="visible list-unstyled text-center" dnd-list="models.lists.A" dnd-drop="dropCallback(item,0)">
                        <li ng-repeat="item in models.lists.A"
                            dnd-draggable="item"
                            dnd-moved="models.lists.A.splice($index, 1)"
                            dnd-effect-allowed="move"
                            dnd-selected="models.selected = item"
                            ng-class="{'selected': models.selected === item}">
                            <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                        </li>
                    </ul>
                </div>

                <div class="space col-sm-2">
                    <ul class="visible list-unstyled text-center" dnd-list="models.lists.B" dnd-drop="dropCallback(item,1)">
                        <li ng-repeat="item in models.lists.B"
                            dnd-draggable="item"
                            dnd-moved="models.lists.B.splice($index, 1)"
                            dnd-effect-allowed="move"
                            dnd-selected="models.selected = item"
                            ng-class="{'selected': models.selected === item}">
                            <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                        </li>
                    </ul>
                </div>
                <div class="space col-sm-2">
                    <ul class="visible list-unstyled text-center" dnd-list="models.lists.C" dnd-drop="dropCallback(item,2)">
                        <li ng-repeat="item in models.lists.C"
                            dnd-draggable="item"
                            dnd-moved="models.lists.C.splice($index, 1)"
                            dnd-effect-allowed="move"
                            dnd-selected="models.selected = item"
                            ng-class="{'selected': models.selected === item}">
                            <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                        </li>
                    </ul>
                </div>
                <div class="space col-sm-2">
                    <ul class="visible list-unstyled text-center" dnd-list="models.lists.D" dnd-drop="dropCallback(item,3)">
                        <li ng-repeat="item in models.lists.D"
                            dnd-draggable="item"
                            dnd-moved="models.lists.D.splice($index, 1)"
                            dnd-effect-allowed="move"
                            dnd-selected="models.selected = item"
                            ng-class="{'selected': models.selected === item}">
                            <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                        </li>
                    </ul>
                </div>
                <div class="space col-sm-2">
                    <ul class="visible list-unstyled text-center" dnd-list="models.lists.E" dnd-drop="dropCallback(item,4)">
                        <li ng-repeat="item in models.lists.E"
                            dnd-draggable="item"
                            dnd-moved="models.lists.E.splice($index, 1)"
                            dnd-effect-allowed="move"
                            dnd-selected="models.selected = item"
                            ng-class="{'selected': models.selected === item}">
                            <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                        </li>
                    </ul>
                </div>
                <div class="space col-sm-2">
                    <ul class="visible list-unstyled text-center" dnd-list="models.lists.F" dnd-drop="dropCallback(item,5)">
                        <li ng-repeat="item in models.lists.F"
                            dnd-draggable="item"
                            dnd-moved="models.lists.F.splice($index, 1)"
                            dnd-effect-allowed="move"
                            dnd-selected="models.selected = item"
                            ng-class="{'selected': models.selected === item}">
                            <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                        </li>
                    </ul>
                </div>
            </div>*@
</div>
</body>

@*<table class="fill">
                <tr>
                    <th class="wid space2"><h5 class="text-center"><strong>Open</strong></h5></th>
                    <th class="wid space2"><h5 class="text-center"><strong>Planned</strong></h5></th>
                    <th class="wid space2"><h5 class="text-center"><strong>In Progress</strong></h5></th>
                    <th class="wid space2"><h5 class="text-center"><strong>In Testing</strong></h5></th>
                    <th class="wid space2"><h5 class="text-center"><strong>Done</strong></h5></th>
                    <th class="wid space2"><h5 class="text-center"><strong>Cancelled</strong></h5></th>
                </tr>


                <tr>
                    <td class="wid">
                        <div class="space">
                        <ul class="visible list-unstyled text-center" dnd-list="models.lists.A">
                            <li ng-repeat="item in models.lists.A"
                                dnd-draggable="item"
                                dnd-moved="models.lists.A.splice($index, 1)"
                                dnd-effect-allowed="move"
                                dnd-selected="models.selected = item"
                                ng-class="{'selected': models.selected === item}">
                                <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                            </li>
                        </ul>
                            </div>
                    </td>
                    <td class="wid">
                        <div class="space">
                            <ul class="visible list-unstyled text-center" dnd-list="models.lists.B">
                                <li ng-repeat="item in models.lists.B"
                                    dnd-draggable="item"
                                    dnd-moved="models.lists.B.splice($index, 1)"
                                    dnd-effect-allowed="move"
                                    dnd-selected="models.selected = item"
                                    ng-class="{'selected': models.selected === item}">
                                    <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                                </li>
                            </ul>
                            </div>

    </td>

                    <td class="wid">
                        <div class="space">
                            <ul class="visible list-unstyled text-center" dnd-list="models.lists.C">
                                <li ng-repeat="item in models.lists.C"
                                    dnd-draggable="item"
                                    dnd-moved="models.lists.C.splice($index, 1)"
                                    dnd-effect-allowed="move"
                                    dnd-selected="models.selected = item"
                                    ng-class="{'selected': models.selected === item}">
                                    <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                                </li>
                            </ul>
                            </div>

    </td>

                    <td class="wid">
                        <div class="space">
                            <ul class="visible list-unstyled text-center" dnd-list="models.lists.D">
                                <li ng-repeat="item in models.lists.D"
                                    dnd-draggable="item"
                                    dnd-moved="models.lists.D.splice($index, 1)"
                                    dnd-effect-allowed="move"
                                    dnd-selected="models.selected = item"
                                    ng-class="{'selected': models.selected === item}">
                                    <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                                </li>
                            </ul>
                            </div>
    </td>
                    <td class="wid">
                        <div class="space">
                            <ul class="visible list-unstyled text-center" dnd-list="models.lists.E">
                                <li ng-repeat="item in models.lists.E"
                                    dnd-draggable="item"
                                    dnd-moved="models.lists.E.splice($index, 1)"
                                    dnd-effect-allowed="move"
                                    dnd-selected="models.selected = item"
                                    ng-class="{'selected': models.selected === item}">
                                    <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                                </li>
                            </ul>
                            </div>
    </td>

                    <td class="wid">
                        <div class="space">
                            <ul class="visible list-unstyled text-center" dnd-list="models.lists.F">
                                <li ng-repeat="item in models.lists.F"
                                    dnd-draggable="item"
                                    dnd-moved="models.lists.F.splice($index, 1)"
                                    dnd-effect-allowed="move"
                                    dnd-selected="models.selected = item"
                                    ng-class="{'selected': models.selected === item}">
                                    <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                                </li>
                            </ul>
                            </div>
    </td>
                </tr>

            </table>*@