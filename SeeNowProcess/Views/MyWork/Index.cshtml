@model IEnumerable<SeeNowProcess.Models.Problem>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Index";
}

<head>
    <style>
        .element {
            border-radius: 20px;
            background-color: #33cc33;
            width: 150px;
            padding: 5px;
            margin-left: auto;
            margin-right: auto;
            margin-top: 5px;
            text-align: center;
            font-size: 12px;
            min-height: 100px;
        }

        .element2 {
            border-radius: 30px;
            background-color: #79ff4d;
            margin-left: auto;
            margin-right: auto;
            text-align: center;
            padding: 5px;
            width: 120px;
        }

        .space {
            height: 900px;
            padding-top: 15px;
            width: 0px;
            border: 1px solid #aaaaaa;
            background-color: #e6ffe6;
            min-height: 400px;
            max-height: 1000px;
        }

        .visible {
            min-height: 500px;
            min-width: 50px;
        }

        .space2 {
            height: 100%;
            border: 1px solid #aaaaaa;
            background-color: #e6ffe6;
        }

        .body {
            margin: 0 !important;
        }

        .simpleDemo ul[dnd-list],
        .simpleDemo ul[dnd-list] > li {
            position: relative;
        }

        .simpleDemo ul[dnd-list] {
            min-height: 42px;
            padding-left: 0px;
        }

            .simpleDemo ul[dnd-list] .dndDraggingSource {
                display: none;
            }

            .simpleDemo ul[dnd-list] .dndPlaceholder {
                display: block;
                background-color: #ddd;
                min-height: 42px;
            }

            .simpleDemo ul[dnd-list] li {
                background-color: #fff;
                border: 1px solid #ddd;
                border-top-right-radius: 4px;
                border-top-left-radius: 4px;
                display: block;
                padding: 10px 15px;
                margin-bottom: -1px;
            }

                .simpleDemo ul[dnd-list] li.selected {
                    background-color: #dff0d8;
                    color: #3c763d;
                }
    </style>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link rel="stylesheet" type="text/css" href="~/Content/leftmenu.css">
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <script src="~/Scripts/angular-drag-and-drop-lists.js"></script>
</head>
<body>

    <script>
        angular.module("dragAndDrop", ['dndLists']).controller("dragging", function ($scope, $http) {
            $http({
                method: "GET",
                url: "/MyWork/IndexJS",
                headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8' }
            })
            .then(function success(result) {
                $scope.models.lists.A = result.data;
                //for (x in $scope.list.data) {
                //    $scope.models.lists.A.push({ProblemID:x.ProblemID, Title:x.Title, Description:x.Description});
                //} 

                
            }).catch(function fail(result) {
                $scope.list = ":(";
            })
            $scope.models = {
                selected: null,
                lists: { "A": [], "B": [], "C": [], "D":[], "E":[], "F":[] }
            };

            $scope.addTask = function (title,description) {
                $scope.models.lists.A.push({title, description});
            }
            // Generate initial model
            //for (var i = 1; i <= 3; ++i) {
            //    $scope.models.lists.A.push({ label: "Item A" + i });
            //    $scope.models.lists.B.push({ label: "Item B" + i });
            //}


            //$scope.$watch('list', function (modeling) {
            //    $scope.modelAsJson = angular.toJson(modeling, true);
            //}, true);
            // Model to JSON for demo purpose
            //$scope.$watch('models', function (model) {
            //    $scope.modelAsJson = angular.toJson(model, true);
            //}, true);

        });

    </script>




    <div class="container-fluid" ng-app="dragAndDrop" ng-controller="dragging">
      

        <div class="row">
            <div class="space2 col-sm-2"><h5 class="text-center"><strong>Open</strong></h5></div>
            <div class="space2 col-sm-2"><h5 class="text-center"><strong>Planned</strong></h5></div>
            <div class="space2 col-sm-2"><h5 class="text-center"><strong>In Progress</strong></h5></div>
            <div class="space2 col-sm-2"><h5 class="text-center"><strong>In Testing</strong></h5></div>
            <div class="space2 col-sm-2"><h5 class="text-center"><strong>Done</strong></h5></div>
            <div class="space2 col-sm-2"><h5 class="text-center"><strong>Cancelled</strong></h5></div>
        </div>
        <div class="row">
            <div class="space col-sm-2">
                <ul class="visible list-unstyled text-center" dnd-list="models.lists.A">
                    <li ng-repeat="item in models.lists.A"
                        dnd-draggable="item"
                        dnd-moved="models.lists.A.splice($index, 1)"
                        dnd-effect-allowed="move"
                        dnd-selected="models.selected = item"
                        ng-class="{'selected': models.selected === item}">
                        <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                    </li>
                </ul>
            </div>

            <div class="space col-sm-2">
                <ul class="visible list-unstyled text-center" dnd-list="models.lists.B">
                    <li ng-repeat="item in models.lists.B"
                        dnd-draggable="item"
                        dnd-moved="models.lists.B.splice($index, 1)"
                        dnd-effect-allowed="move"
                        dnd-selected="models.selected = item"
                        ng-class="{'selected': models.selected === item}">
                        <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                    </li>
                </ul>
            </div>
            <div class="space col-sm-2">
                <ul class="visible list-unstyled text-center" dnd-list="models.lists.C">
                    <li ng-repeat="item in models.lists.C"
                        dnd-draggable="item"
                        dnd-moved="models.lists.C.splice($index, 1)"
                        dnd-effect-allowed="move"
                        dnd-selected="models.selected = item"
                        ng-class="{'selected': models.selected === item}">
                        <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                    </li>
                </ul>
            </div>
            <div class="space col-sm-2">
                <ul class="visible list-unstyled text-center" dnd-list="models.lists.D">
                    <li ng-repeat="item in models.lists.D"
                        dnd-draggable="item"
                        dnd-moved="models.lists.D.splice($index, 1)"
                        dnd-effect-allowed="move"
                        dnd-selected="models.selected = item"
                        ng-class="{'selected': models.selected === item}">
                        <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                    </li>
                </ul>
            </div>
            <div class="space col-sm-2">
                <ul class="visible list-unstyled text-center" dnd-list="models.lists.E">
                    <li ng-repeat="item in models.lists.E"
                        dnd-draggable="item"
                        dnd-moved="models.lists.E.splice($index, 1)"
                        dnd-effect-allowed="move"
                        dnd-selected="models.selected = item"
                        ng-class="{'selected': models.selected === item}">
                        <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                    </li>
                </ul>
            </div>
            <div class="space col-sm-2">
                <ul class="visible list-unstyled text-center" dnd-list="models.lists.F">
                    <li ng-repeat="item in models.lists.F"
                        dnd-draggable="item"
                        dnd-moved="models.lists.F.splice($index, 1)"
                        dnd-effect-allowed="move"
                        dnd-selected="models.selected = item"
                        ng-class="{'selected': models.selected === item}">
                        <div class="element">{{item.Title}}<p class="element2">{{item.Description}}</p></div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</body>

